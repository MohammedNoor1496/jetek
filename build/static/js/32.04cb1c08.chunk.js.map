{"version":3,"sources":["views/widgets/WidgetsDropdown.js","views/charts/ChartLineSimple.js","views/charts/ChartBarSimple.js"],"names":["WidgetsDropdown","sm","lg","color","header","this","props","usersCount","text","footerSlot","pointed","className","style","height","dataPoints","pointHoverBackgroundColor","label","labels","name","placement","disabled","CaptinsCount","options","elements","line","tension","caret","backgroundColor","borderWidth","OrderCount","React","Component","ChartLineSimple","borderColor","attributes","pointHoverColor","defaultDatasets","data","getColor","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","apply","max","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","Object","assign","maintainAspectRatio","legend","computedDatasets","deepObjectsMerge","datasets","computedOptions","defaultProps","ChartBarSimple","barPercentage","categoryPercentage"],"mappings":"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","file":"static/js/32.04cb1c08.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  CWidgetDropdown,\r\n  CRow,\r\n  CCol,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownToggle\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport ChartLineSimple from '../charts/ChartLineSimple'\r\nimport ChartBarSimple from '../charts/ChartBarSimple'\r\n\r\nclass WidgetsDropdown extends React.Component {\r\n  render() {\r\n    return (\r\n      <CRow>\r\n        <CCol sm=\"6\" lg=\"3\">\r\n          <CWidgetDropdown\r\n            color=\"gradient-primary\"\r\n            header={this.props.usersCount}\r\n            text=\"عدد المستخدمين \"\r\n            footerSlot={\r\n              <ChartLineSimple\r\n                pointed\r\n                className=\"c-chart-wrapper mt-3 mx-3\"\r\n                style={{ height: '70px' }}\r\n                dataPoints={[65, 59, 84, 84, 51, 55, 40]}\r\n                pointHoverBackgroundColor=\"primary\"\r\n                label=\"Members\"\r\n                labels=\"months\"\r\n              />\r\n            }\r\n          >\r\n            <CDropdown>\r\n              <CDropdownToggle color=\"transparent\">\r\n                <CIcon name=\"cil-settings\" />\r\n              </CDropdownToggle>\r\n              <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n                <CDropdownItem>Action</CDropdownItem>\r\n                <CDropdownItem>Another action</CDropdownItem>\r\n                <CDropdownItem>Something else here...</CDropdownItem>\r\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n          </CWidgetDropdown>\r\n        </CCol>\r\n\r\n        <CCol sm=\"6\" lg=\"3\">\r\n          <CWidgetDropdown\r\n            color=\"gradient-info\"\r\n            header={this.props.CaptinsCount}\r\n            text=\"عدد الكباتن\"\r\n            footerSlot={\r\n              <ChartLineSimple\r\n                pointed\r\n                className=\"mt-3 mx-3\"\r\n                style={{ height: '70px' }}\r\n                dataPoints={[1, 18, 9, 17, 34, 22, 11]}\r\n                pointHoverBackgroundColor=\"info\"\r\n                options={{ elements: { line: { tension: 0.00001 } } }}\r\n                label=\"Members\"\r\n                labels=\"months\"\r\n              />\r\n            }\r\n          >\r\n            <CDropdown>\r\n              <CDropdownToggle caret={false} color=\"transparent\">\r\n                <CIcon name=\"cil-location-pin\" />\r\n              </CDropdownToggle>\r\n              <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n                <CDropdownItem>Action</CDropdownItem>\r\n                <CDropdownItem>Another action</CDropdownItem>\r\n                <CDropdownItem>Something else here...</CDropdownItem>\r\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n          </CWidgetDropdown>\r\n        </CCol>\r\n\r\n        <CCol sm=\"6\" lg=\"3\">\r\n          <CWidgetDropdown\r\n            color=\"gradient-warning\"\r\n            header=\"9.823\"\r\n            text=\"عدد نقاط البيع \"\r\n            footerSlot={\r\n              <ChartLineSimple\r\n                className=\"mt-3\"\r\n                style={{ height: '70px' }}\r\n                backgroundColor=\"rgba(255,255,255,.2)\"\r\n                dataPoints={[78, 81, 80, 45, 34, 12, 40]}\r\n                options={{ elements: { line: { borderWidth: 2.5 } } }}\r\n                pointHoverBackgroundColor=\"warning\"\r\n                label=\"Members\"\r\n                labels=\"months\"\r\n              />\r\n            }\r\n          >\r\n            <CDropdown>\r\n              <CDropdownToggle color=\"transparent\">\r\n                <CIcon name=\"cil-settings\" />\r\n              </CDropdownToggle>\r\n              <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n                <CDropdownItem>Action</CDropdownItem>\r\n                <CDropdownItem>Another action</CDropdownItem>\r\n                <CDropdownItem>Something else here...</CDropdownItem>\r\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n          </CWidgetDropdown>\r\n        </CCol>\r\n\r\n        <CCol sm=\"6\" lg=\"3\">\r\n          <CWidgetDropdown\r\n            color=\"gradient-danger\"\r\n            header={this.props.OrderCount}\r\n            text=\"عدد الطلبات \"\r\n            footerSlot={\r\n              <ChartBarSimple\r\n                className=\"mt-3 mx-3\"\r\n                style={{ height: '70px' }}\r\n                backgroundColor=\"rgb(250, 152, 152)\"\r\n                label=\"Members\"\r\n                labels=\"months\"\r\n              />\r\n            }\r\n          >\r\n            <CDropdown>\r\n              <CDropdownToggle caret className=\"text-white\" color=\"transparent\">\r\n                <CIcon name=\"cil-settings\" />\r\n              </CDropdownToggle>\r\n              <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n                <CDropdownItem>Action</CDropdownItem>\r\n                <CDropdownItem>Another action</CDropdownItem>\r\n                <CDropdownItem>Something else here...</CDropdownItem>\r\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n          </CWidgetDropdown>\r\n        </CCol>\r\n      </CRow >\r\n    )\r\n  }\r\n}\r\nexport default WidgetsDropdown\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor, deepObjectsMerge } from '@coreui/utils'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\n\r\nconst ChartLineSimple = props => {\r\n\r\n  const {\r\n    borderColor,\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const pointHoverColor = (()=>{\r\n    if (pointHoverBackgroundColor) {\r\n      return pointHoverBackgroundColor\r\n    } else if (backgroundColor !== 'transparent') {\r\n      return backgroundColor\r\n    }\r\n    return borderColor\r\n  })()\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        borderColor: getColor(borderColor),\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointBackgroundColor: getColor(pointHoverColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverColor),\r\n        label\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const pointedOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            offset: true,\r\n            gridLines: {\r\n              color: 'transparent',\r\n              zeroLineColor: 'transparent'\r\n            },\r\n            ticks: {\r\n              fontSize: 2,\r\n              fontColor: 'transparent'\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            display: false,\r\n            ticks: {\r\n              display: false,\r\n              min: Math.min.apply(Math, dataPoints) - 5,\r\n              max: Math.max.apply(Math, dataPoints) + 5\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 1\r\n        },\r\n        point: {\r\n          radius: 4,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const straightOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 2\r\n        },\r\n        point: {\r\n          radius: 0,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    const options = pointed ? pointedOptions : straightOptions\r\n      return Object.assign({}, options, {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        }\r\n      })\r\n  })()\r\n\r\n  const computedDatasets = (() => {\r\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\r\n  })()\r\n\r\n  const computedOptions = (() => {\r\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\r\n  })()\r\n\r\n  // render\r\n\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      datasets={computedDatasets}\r\n      options={computedOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartLineSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  borderColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartLineSimple.defaultProps = {\r\n  borderColor: 'rgba(255,255,255,.55)',\r\n  backgroundColor: 'transparent',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartLineSimple\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor } from '@coreui/utils'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\n\r\nconst ChartBarSimple = props => {\r\n\r\n  const {\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\r\n        label: label,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 1\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      }\r\n    }\r\n  })()\r\n\r\n  // render\r\n  return (\r\n    <CChartBar\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartBarSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartBarSimple.defaultProps = {\r\n  backgroundColor: 'rgba(0,0,0,.2)',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartBarSimple\r\n"],"sourceRoot":""}